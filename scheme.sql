-- Latest schema for MTI Pontianak (Supabase)

-- Helper: trigger function to auto-update updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE 'plpgsql';

-- Users
CREATE TABLE IF NOT EXISTS public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nrp text NOT NULL,
  password text NOT NULL,
  name text NOT NULL,
  jabatan text NULL,
  updated_at timestamptz NULL DEFAULT now(),
  status text NULL,
  "group" text NULL,
  status_group text NULL,
  sisa_cuti integer NULL,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_nrp_key UNIQUE (nrp)
) TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS idx_users_nrp ON public.users USING btree (nrp) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_users_updated_at ON public.users USING btree (updated_at) TABLESPACE pg_default;

DROP TRIGGER IF EXISTS update_users_updated_at ON public.users;
CREATE TRIGGER update_users_updated_at
  BEFORE UPDATE ON public.users
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Surat Keluar
CREATE TABLE IF NOT EXISTS public.surat_keluar (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now(),
  nama_perusahaan text NULL,
  deskripsi_surat text NULL,
  nomor_surat text NULL,
  url_ttd varchar NULL,
  judul_surat text NULL,
  CONSTRAINT surat_keluar_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

-- Supervisor
CREATE TABLE IF NOT EXISTS public.supervisor (
  id serial NOT NULL,
  nama varchar(255) NOT NULL,
  jabatan varchar(255) NOT NULL,
  jenis varchar(50) NOT NULL,
  created_at timestamptz NULL DEFAULT now(),
  updated_at timestamptz NULL DEFAULT now(),
  CONSTRAINT supervisor_pkey PRIMARY KEY (id),
  CONSTRAINT supervisor_jenis_check CHECK ((jenis)::text = ANY ((ARRAY['Penunjang'::varchar,'Logistik'::varchar,'Manager_PDS'::varchar])::text[]))
) TABLESPACE pg_default;

DROP TRIGGER IF EXISTS update_supervisor_updated_at ON public.supervisor;
CREATE TRIGGER update_supervisor_updated_at
  BEFORE UPDATE ON public.supervisor
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Jabatan (permissions)
CREATE TABLE IF NOT EXISTS public.jabatan (
  created_at timestamptz NOT NULL DEFAULT now(),
  nama text NULL,
  "permissionCuti" boolean NULL,
  "permissionEksepsi" boolean NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  "permissionAllCuti" boolean NULL,
  "permissionAllEksepsi" boolean NULL,
  "permissionInsentif" boolean NULL,
  "permissionAtk" boolean NULL,
  "permissionAllInsentif" boolean NULL,
  "permissionSuratKeluar" boolean NULL,
  "permissionManagementData" boolean NULL,
  CONSTRAINT jabatan_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

-- Insentif Premi
CREATE TABLE IF NOT EXISTS public.insentif_premi (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now(),
  nama text NULL,
  nominal integer NULL,
  users_id uuid NULL DEFAULT gen_random_uuid(),
  bulan timestamptz NULL,
  tahun timestamptz NULL,
  nrp text NULL,
  CONSTRAINT insentif_premi_pkey PRIMARY KEY (id),
  CONSTRAINT insentif_premi_users_id_fkey FOREIGN KEY (users_id) REFERENCES public.users (id) ON UPDATE CASCADE
) TABLESPACE pg_default;

-- Insentif Lembur
CREATE TABLE IF NOT EXISTS public.insentif_lembur (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now(),
  nama text NULL,
  nominal integer NULL,
  users_id uuid NULL DEFAULT gen_random_uuid(),
  bulan timestamptz NULL,
  tahun timestamptz NULL,
  nrp text NULL,
  CONSTRAINT insentif_lembur_pkey PRIMARY KEY (id),
  CONSTRAINT insentif_lembur_users_id_fkey FOREIGN KEY (users_id) REFERENCES public.users (id) ON UPDATE CASCADE
) TABLESPACE pg_default;

-- Group
CREATE TABLE IF NOT EXISTS public."group" (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamptz NOT NULL DEFAULT now(),
  nama text NULL,
  CONSTRAINT group_pkey PRIMARY KEY (id)
) TABLESPACE pg_default;

-- Eksepsi
CREATE TABLE IF NOT EXISTS public.eksepsi (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  jenis_eksepsi text NOT NULL,
  tanggal_pengajuan timestamptz NULL DEFAULT now(),
  created_at timestamptz NULL DEFAULT now(),
  updated_at timestamptz NULL DEFAULT now(),
  url_ttd_eksepsi text NULL,
  CONSTRAINT eksepsi_pkey PRIMARY KEY (id),
  CONSTRAINT eksepsi_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users (id) ON DELETE CASCADE
) TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS idx_eksepsi_user_id ON public.eksepsi USING btree (user_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_eksepsi_tanggal_pengajuan ON public.eksepsi USING btree (tanggal_pengajuan) TABLESPACE pg_default;

DROP TRIGGER IF EXISTS update_eksepsi_updated_at ON public.eksepsi;
CREATE TRIGGER update_eksepsi_updated_at
  BEFORE UPDATE ON public.eksepsi
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Eksepsi Tanggal (detail tanggal per eksepsi)
CREATE TABLE IF NOT EXISTS public.eksepsi_tanggal (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  eksepsi_id uuid NOT NULL,
  tanggal_eksepsi date NOT NULL,
  urutan integer NOT NULL,
  created_at timestamptz NULL DEFAULT now(),
  alasan_eksepsi text NULL,
  CONSTRAINT eksepsi_tanggal_pkey PRIMARY KEY (id),
  CONSTRAINT unique_eksepsi_urutan UNIQUE (eksepsi_id, urutan),
  CONSTRAINT eksepsi_tanggal_eksepsi_id_fkey FOREIGN KEY (eksepsi_id) REFERENCES public.eksepsi (id) ON DELETE CASCADE,
  CONSTRAINT max_10_dates CHECK ((urutan <= 10))
) TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS idx_eksepsi_tanggal_eksepsi_id ON public.eksepsi_tanggal USING btree (eksepsi_id) TABLESPACE pg_default;
CREATE INDEX IF NOT EXISTS idx_eksepsi_tanggal_date ON public.eksepsi_tanggal USING btree (tanggal_eksepsi) TABLESPACE pg_default;

-- Cuti
CREATE TABLE IF NOT EXISTS public.cuti (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamptz NOT NULL DEFAULT now(),
  lama_cuti integer NULL,
  alasan_cuti text NULL,
  nama text NULL,
  list_tanggal_cuti varchar NULL,
  url_ttd text NULL,
  sisa_cuti integer NULL,
  tanggal_pengajuan timestamptz NULL,
  users_id uuid NULL,
  kunci_cuti boolean NULL,
  CONSTRAINT cuti_pkey PRIMARY KEY (id),
  CONSTRAINT cuti_users_id_fkey FOREIGN KEY (users_id) REFERENCES public.users (id)
) TABLESPACE pg_default;

-- Optional helpful indexes
CREATE INDEX IF NOT EXISTS idx_cuti_nama ON public.cuti (nama);
CREATE INDEX IF NOT EXISTS idx_cuti_tanggal_pengajuan ON public.cuti (tanggal_pengajuan);
CREATE INDEX IF NOT EXISTS idx_cuti_created_at ON public.cuti (created_at);
