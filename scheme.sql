create table public.users (
  id uuid not null default gen_random_uuid (),
  nrp text not null,
  password text not null,
  name text not null,
  jabatan text null,
  updated_at timestamp with time zone null default now(),
  status text null,
  "group" text null,
  status_group text null,
  sisa_cuti integer null default 14,
  credit_slot integer null default 50,
  constraint users_pkey primary key (id),
  constraint users_nrp_key unique (nrp)
) TABLESPACE pg_default;

create index IF not exists idx_users_nrp on public.users using btree (nrp) TABLESPACE pg_default;

create index IF not exists idx_users_updated_at on public.users using btree (updated_at) TABLESPACE pg_default;

create trigger update_users_updated_at BEFORE
update on users for EACH row
execute FUNCTION update_updated_at_column ();

create table public.insentif_lembur (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  nama text null,
  nominal integer null,
  users_id uuid null default gen_random_uuid (),
  bulan date null,
  tahun integer null,
  nrp text null,
  constraint insentif_lembur_pkey primary key (id),
  constraint insentif_lembur_unique_user_tahun_bulan unique (users_id, tahun, bulan),
  constraint insentif_lembur_users_id_fkey foreign KEY (users_id) references users (id) on update CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_insentif_lembur_tahun on public.insentif_lembur using btree (tahun) TABLESPACE pg_default;

create index IF not exists idx_insentif_lembur_bulan on public.insentif_lembur using btree (bulan) TABLESPACE pg_default;

create table public.insentif_premi (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  nama text null,
  nominal integer null,
  users_id uuid null,
  nrp text null,
  bulan date null,
  tahun integer null,
  constraint insentif_premi_pkey primary key (id),
  constraint insentif_premi_users_bulan_date_key unique (users_id, bulan),
  constraint insentif_premi_users_id_fkey foreign KEY (users_id) references users (id) on update CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_insentif_premi_tahun_int on public.insentif_premi using btree (tahun) TABLESPACE pg_default;

create index IF not exists idx_insentif_premi_bulan_date on public.insentif_premi using btree (bulan) TABLESPACE pg_default;

-- ===== Lanjutan skema: tabel cuti, eksepsi, eksepsi_tanggal, group, jabatan, supervisor, surat_keluar =====

create table public.cuti (
  id uuid not null default gen_random_uuid (),
  created_at timestamp with time zone not null default now(),
  lama_cuti integer null,
  alasan_cuti text null,
  nama text null,
  list_tanggal_cuti character varying null,
  url_ttd text null,
  sisa_cuti integer null,
  tanggal_pengajuan timestamp with time zone null,
  users_id uuid null,
  kunci_cuti boolean null,
  constraint cuti_pkey primary key (id),
  constraint cuti_users_id_fkey foreign KEY (users_id) references users (id)
) TABLESPACE pg_default;

create table public.eksepsi (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  jenis_eksepsi text not null,
  tanggal_pengajuan timestamp with time zone null default now(),
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  url_ttd_eksepsi text null,
  constraint eksepsi_pkey primary key (id),
  constraint eksepsi_user_id_fkey foreign KEY (user_id) references users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_eksepsi_user_id on public.eksepsi using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_eksepsi_tanggal_pengajuan on public.eksepsi using btree (tanggal_pengajuan) TABLESPACE pg_default;

create trigger update_eksepsi_updated_at BEFORE
update on eksepsi for EACH row
execute FUNCTION update_updated_at_column ();

create table public.eksepsi_tanggal (
  id uuid not null default gen_random_uuid (),
  eksepsi_id uuid not null,
  tanggal_eksepsi date not null,
  urutan integer not null,
  created_at timestamp with time zone null default now(),
  alasan_eksepsi text null,
  constraint eksepsi_tanggal_pkey primary key (id),
  constraint unique_eksepsi_urutan unique (eksepsi_id, urutan),
  constraint eksepsi_tanggal_eksepsi_id_fkey foreign KEY (eksepsi_id) references eksepsi (id) on delete CASCADE,
  constraint max_10_dates check ((urutan <= 10))
) TABLESPACE pg_default;

create index IF not exists idx_eksepsi_tanggal_eksepsi_id on public.eksepsi_tanggal using btree (eksepsi_id) TABLESPACE pg_default;

create index IF not exists idx_eksepsi_tanggal_date on public.eksepsi_tanggal using btree (tanggal_eksepsi) TABLESPACE pg_default;

create table public."group" (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  nama text null,
  constraint group_pkey primary key (id)
) TABLESPACE pg_default;

create table public.jabatan (
  created_at timestamp with time zone not null default now(),
  nama text null,
  "permissionCuti" boolean null,
  "permissionEksepsi" boolean null,
  id uuid not null default gen_random_uuid (),
  "permissionAllCuti" boolean null,
  "permissionAllEksepsi" boolean null,
  "permissionInsentif" boolean null,
  "permissionAtk" boolean null,
  "permissionAllInsentif" boolean null,
  "permissionSuratKeluar" boolean null,
  "permissionManagementData" boolean null,
  constraint jabatan_pkey primary key (id)
) TABLESPACE pg_default;

create table public.supervisor (
  id serial not null,
  nama character varying(255) not null,
  jabatan character varying(255) not null,
  jenis character varying(50) not null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint supervisor_pkey primary key (id),
  constraint supervisor_jenis_check check (
    (
      (jenis)::text = any (
        (
          array[
            'Penunjang'::character varying,
            'Logistik'::character varying,
            'Manager_PDS'::character varying
          ]
        )::text[]
      )
    )
  )
) TABLESPACE pg_default;

create trigger update_supervisor_updated_at BEFORE
update on supervisor for EACH row
execute FUNCTION update_updated_at_column ();

create table public.surat_keluar (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  nama_perusahaan text null,
  deskripsi_surat text null,
  nomor_surat text null,
  url_ttd character varying null,
  judul_surat text null,
  constraint surat_keluar_pkey primary key (id)
) TABLESPACE pg_default;